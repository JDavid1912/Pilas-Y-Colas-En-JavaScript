// Se presenta un ejmplo utilizado una cola para gestionar la atenci√≥n de clientes en un sistema de servicio al cliente.
// Este ejemplo muestra c√≥mo agregar clientes a una cola, atenderlos y verificar el estado de la cola.

// Definimos una clase ColaAtencion que representa nuestro sistema de atenci√≥n al cliente
class ColaAtencion {
    // El constructor se ejecuta cuando creamos una nueva cola
    constructor(capacidadMaxima) {
        this.cola = []; // Inicializamos un array vac√≠o para la cola
        this.capacidadMaxima = capacidadMaxima; // Establecemos la capacidad m√°xima de la cola
    }

    // M√©todo para agregar un cliente a la cola
    enqueue(cliente) {
        if (this.isFull()) { // Verificamos si la cola est√° llena
            console.log(`üö´ La cola est√° llena. No se puede agregar a ${cliente}.`);
        } else {
            this.cola.push(cliente); // Agregamos el cliente al final de la cola
            console.log(`‚úÖ Cliente ${cliente} ha sido agregado a la cola.`);
        }
    }

    // M√©todo para atender al cliente que est√° en la parte frontal de la cola
    dequeue() {
        if (this.isEmpty()) { // Verificamos si la cola est√° vac√≠a
            console.log("üö´ No hay clientes en la cola para atender.");
        } else {
            const clienteAtendido = this.cola.shift(); // Atendemos al primer cliente
            console.log(`üë®‚Äçüíº Cliente atendido: ${clienteAtendido}`);
        }
    }

    // M√©todo para verificar si la cola est√° llena
    isFull() {
        return this.cola.length >= this.capacidadMaxima; // Devuelve true si la cola est√° llena
    }

    // M√©todo para verificar si la cola est√° vac√≠a
    isEmpty() {
        return this.cola.length === 0; // Devuelve true si la cola est√° vac√≠a
    }

    // M√©todo para mostrar el estado actual de la cola
    mostrarCola() {
        if (this.isEmpty()) { // Verificamos si la cola est√° vac√≠a
            console.log("üì≠ La cola est√° vac√≠a.");
        } else {
            console.log("üìã Clientes en espera:", this.cola.join(", ")); // Mostramos los clientes en espera
        }
    }
}

// Ahora, vamos a usar nuestro sistema de atenci√≥n
const atencionClientes = new ColaAtencion(5); // Creamos una nueva cola con capacidad para 5 clientes

// Agregamos algunos clientes a la cola
atencionClientes.enqueue("Ana");
atencionClientes.enqueue("Luis");
atencionClientes.enqueue("Carlos");
atencionClientes.enqueue("Marta");
atencionClientes.enqueue("Luc√≠a");
atencionClientes.enqueue("Pedro"); // Intentamos agregar a Pedro, pero la cola ya est√° llena

// Mostramos el estado de la cola
atencionClientes.mostrarCola();

// Atendemos a 2 clientes
console.log("\n‚è±Ô∏è Atendiendo a 2 clientes...");
atencionClientes.dequeue();
atencionClientes.dequeue();

// Mostramos el estado de la cola nuevamente
atencionClientes.mostrarCola();

// Intentamos agregar a Pedro de nuevo
console.log("\nüîÑ Agregando a Pedro de nuevo...");
atencionClientes.enqueue("Pedro");

// Mostramos el estado final de la cola
atencionClientes.mostrarCola();
